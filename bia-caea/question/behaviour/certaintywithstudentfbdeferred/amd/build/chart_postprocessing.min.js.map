{"version":3,"file":"chart_postprocessing.min.js","sources":["../src/chart_postprocessing.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['core/chartjs', 'qbehaviour_certaintywithstudentfbdeferred/charts_utility'], function(ChartJS, ChartsUtility) {\n\n    var component = 'qbehaviour_certaintywithstudentfbdeferred';\n\n    var currentNumForSidebar = -1;\n\n    /**\n     * Handle toggling on and off of sidebar for charts.\n     * @param {Number} attemptNum Clicked attempt.\n     */\n    function toggleSidebar(attemptNum) {\n        var contentEl = document.querySelector('.charts-content');\n\n        var sidebarsContainer = document.getElementById('charts-sidebar-container');\n        sidebarsContainer.hidden = true;\n        document.querySelectorAll('[data-role=\"charts-sidebar\"]').forEach(function(sidebar) {\n            sidebar.hidden = true;\n        });\n\n        if (currentNumForSidebar == attemptNum) {\n            contentEl.classList.remove('reducedwidth');\n            currentNumForSidebar = -1;\n            return;\n        }\n\n        currentNumForSidebar = attemptNum;\n\n        // Show sidebar.\n        sidebarsContainer.hidden = false;\n        document.querySelector('[data-role=\"charts-sidebar\"][data-attemptnum=\"' + attemptNum + '\"]').hidden = false;\n        contentEl.classList.add('reducedwidth');\n    }\n\n    return {\n        postprocessing: function(shapes, hasDeclaredIgnorance) {\n\n            ChartJS.defaults.font.size = 15;\n\n            ChartsUtility.executeWhenChartLoaded(component + '_this-attempt-chart', function(chart) {\n                chart.options.scales.x.ticks.display = false;\n                chart.options.scales.y.ticks.stepSize = 1;\n                chart.options.scales.y.title.display = true;\n                chart.options.scales.y.title.text = M.util.get_string('numofanswers', component);\n                // Remove points on expected trend.\n                chart.options.elements.point.radius = 0;\n                chart.options.elements.point.hoverRadius = 0;\n                chart.update();\n\n                var postProcessThisAttemptChartTable = function() {\n                    var table = document.querySelector('[data-role=\"' + component + '_this-attempt-chart\"] .chart-table table');\n                    if (table === null) {\n                        setTimeout(postProcessThisAttemptChartTable, 200);\n                    } else {\n                        // Remove expected trend data from table as it is misleading when reading\n                        // (it has long, irrelevant, decimal data values, as the only relevant information is the general shape).\n                        table.querySelectorAll('tr > *:nth-child(n+2):nth-child(-n+3)').forEach(e => e.remove());\n                    }\n                };\n                postProcessThisAttemptChartTable();\n            });\n\n            // Count shapes to get number of attempts. This is strange but works and it is fine.\n            var nattempts = shapes.length;\n\n            if (nattempts < 2) {\n                // There is at most one attempt, so grades and lucidity evolution charts are not displayed.\n                return;\n            }\n\n            var defaultPointRadius = 10;\n            var pointHoverRadius = 16;\n            var focusedPointRadius = 14;\n\n            var formatAttemptsProgressChart = function(chart, yMin, yMax, yStep) {\n                chart.options.scales.x.title.display = true;\n                chart.options.scales.x.title.text = M.util.get_string('attemptnumber', 'mod_quiz');\n                chart.options.scales.x.offset = true;\n                chart.options.scales.y.offset = true;\n\n                chart.options.scales.y.min = yMin;\n                chart.options.scales.y.max = yMax;\n                chart.options.scales.y.ticks.stepSize = yStep;\n\n                chart.options.elements.point.radius = defaultPointRadius;\n                chart.options.elements.point.hoverRadius = pointHoverRadius;\n\n                chart.data.datasets[0].borderColor = 'black';\n                chart.data.datasets[0].borderWidth = 2;\n                chart.data.datasets[0].pointStyle = shapes;\n            };\n\n            var setupTooltipAndSideWindowForChart = function(chart, makeTooltipInfo) {\n                chart.options.plugins.tooltip.callbacks.title = function(context) {\n                    return M.util.get_string('attempt', 'mod_quiz', context[0].dataIndex + 1);\n                };\n                chart.options.plugins.tooltip.callbacks.afterBody = function(context) {\n                    return makeTooltipInfo(context[0].dataIndex);\n                };\n                chart.options.plugins.tooltip.callbacks.footer = function() {\n                    return M.util.get_string('clickfordetails', component);\n                };\n                chart.canvas.onclick = function(evt) {\n                    var points = chart.getElementsAtEventForMode(evt, 'nearest', {intersect: true}, true);\n                    if (points.length > 0) {\n                        toggleSidebar(points[0].index + 1);\n                    }\n                };\n            };\n\n            var charts = {\n                grades: null,\n                lucidity: null,\n            };\n\n            var pointsRadiusModified = true;\n            var resetPointsRadius = function() {\n                if (!pointsRadiusModified) {\n                    return;\n                }\n                if (charts.grades !== null) {\n                    charts.grades.mainDataset.pointRadius = Array(nattempts).fill(defaultPointRadius);\n                }\n                if (charts.lucidity !== null) {\n                    charts.lucidity.mainDataset.pointRadius = Array(nattempts).fill(defaultPointRadius);\n                }\n                if (currentNumForSidebar !== -1) {\n                    // Keep current sidebar element bigger.\n                    if (charts.grades !== null) {\n                        charts.grades.mainDataset.pointRadius[currentNumForSidebar - 1] = focusedPointRadius;\n                    }\n                    if (charts.lucidity !== null) {\n                        charts.lucidity.mainDataset.pointRadius[currentNumForSidebar - 1] = focusedPointRadius;\n                    }\n                    pointsRadiusModified = true;\n                } else {\n                    pointsRadiusModified = false;\n                }\n            };\n\n            ChartsUtility.executeWhenChartLoaded(component + '_grades-chart', function(gradesChart) {\n                charts.grades = {\n                    chart: gradesChart,\n                    mainDataset: gradesChart.data.datasets[0],\n                };\n\n                formatAttemptsProgressChart(gradesChart, 0, 100, 10);\n\n                var declaredIgnoranceDataset = null;\n                if (hasDeclaredIgnorance) {\n                    declaredIgnoranceDataset = gradesChart.data.datasets[1];\n                    declaredIgnoranceDataset.hidden = true;\n                }\n\n                setupTooltipAndSideWindowForChart(gradesChart, function(itemIndex) {\n                    if (hasDeclaredIgnorance) {\n                        return M.util.get_string('declaredignoranceratea', component, declaredIgnoranceDataset.data[itemIndex]);\n                    } else {\n                        return '';\n                    }\n                });\n\n                // Make both charts highlight the same points on hover, as they describe the same attempts.\n                gradesChart.options.onHover = function() {\n                    if (charts.lucidity !== null) {\n                        var needUpdate = false;\n                        if (pointsRadiusModified) {\n                            resetPointsRadius();\n                            needUpdate = true;\n                        }\n                        var activeElements = arguments[1];\n                        if (activeElements.length === 1) {\n                            charts.lucidity.mainDataset.pointRadius[activeElements[0].index] = pointHoverRadius;\n                            pointsRadiusModified = true;\n                            needUpdate = true;\n                        }\n                        if (needUpdate) {\n                            charts.lucidity.chart.update();\n                            gradesChart.update();\n                        }\n                    }\n                };\n                gradesChart.canvas.onmouseout = function() {\n                    if (charts.lucidity !== null && pointsRadiusModified) {\n                        resetPointsRadius();\n                        charts.lucidity.chart.update();\n                        gradesChart.update();\n                    }\n                };\n\n                gradesChart.update();\n            });\n\n            ChartsUtility.executeWhenChartLoaded(component + '_lucidity-chart', function(lucidityChart) {\n                charts.lucidity = {\n                    chart: lucidityChart,\n                    mainDataset: lucidityChart.data.datasets[0],\n                };\n\n                formatAttemptsProgressChart(lucidityChart, -100, 100, 10);\n\n                var labelsDataset = lucidityChart.data.datasets[1];\n                labelsDataset.hidden = true;\n\n                setupTooltipAndSideWindowForChart(lucidityChart, function(itemIndex) {\n                    return labelsDataset.data[itemIndex];\n                });\n\n                // Make both charts highlight the same points on hover, as they describe the same attempts.\n                lucidityChart.options.onHover = function() {\n                    if (charts.grades !== null) {\n                        var needUpdate = false;\n                        if (pointsRadiusModified) {\n                            resetPointsRadius();\n                            needUpdate = true;\n                        }\n                        var activeElements = arguments[1];\n                        if (activeElements.length === 1) {\n                            charts.grades.mainDataset.pointRadius[activeElements[0].index] = pointHoverRadius;\n                            pointsRadiusModified = true;\n                            needUpdate = true;\n                        }\n                        if (needUpdate) {\n                            charts.grades.chart.update();\n                            lucidityChart.update();\n                        }\n                    }\n                };\n                lucidityChart.canvas.onmouseout = function() {\n                    if (charts.grades !== null && pointsRadiusModified) {\n                        resetPointsRadius();\n                        charts.grades.chart.update();\n                        lucidityChart.update();\n                    }\n                };\n\n                lucidityChart.update();\n            });\n        }\n    };\n\n});\n"],"names":["define","ChartJS","ChartsUtility","component","currentNumForSidebar","postprocessing","shapes","hasDeclaredIgnorance","defaults","font","size","executeWhenChartLoaded","chart","options","scales","x","ticks","display","y","stepSize","title","text","M","util","get_string","elements","point","radius","hoverRadius","update","postProcessThisAttemptChartTable","table","document","querySelector","setTimeout","querySelectorAll","forEach","e","remove","nattempts","length","formatAttemptsProgressChart","yMin","yMax","yStep","offset","min","max","data","datasets","borderColor","borderWidth","pointStyle","setupTooltipAndSideWindowForChart","makeTooltipInfo","plugins","tooltip","callbacks","context","dataIndex","afterBody","footer","canvas","onclick","evt","points","getElementsAtEventForMode","intersect","attemptNum","contentEl","sidebarsContainer","getElementById","hidden","sidebar","classList","add","toggleSidebar","index","charts","grades","lucidity","pointsRadiusModified","resetPointsRadius","mainDataset","pointRadius","Array","fill","gradesChart","declaredIgnoranceDataset","itemIndex","onHover","needUpdate","activeElements","arguments","onmouseout","lucidityChart","labelsDataset"],"mappings":"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"}