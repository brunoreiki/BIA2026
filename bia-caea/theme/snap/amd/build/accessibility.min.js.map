{"version":3,"file":"accessibility.min.js","sources":["../src/accessibility.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n *\n * @package\n * @module    theme_snap/accessibility\n * @author    Oscar Nadjar oscar.nadjar@openlms.net\n * @copyright Copyright (c) 2019 Open LMS (https://www.openlms.net)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * JS code to assign attributes and expected behavior for elements in the Dom regarding accessibility.\n */\ndefine(['jquery', 'core/str', 'core/event', 'core_form/events', 'theme_boost/bootstrap/tools/sanitizer', 'theme_boost/popover'],\n    function($, str, Event, FormEvents, { DefaultWhitelist }) {\n        return {\n            snapAxInit: function(localJouleGrader, allyReport, blockReports, localCatalogue) {\n\n                /**\n                 * Module to get the strings from Snap to add the aria-label attribute to new accessibility features.\n                 */\n                str.get_strings([\n                    {key: 'accessforumstringdis', component: 'theme_snap'},\n                    {key: 'accessforumstringmov', component: 'theme_snap'},\n                    {key: 'calendar', component: 'calendar'},\n                    {key: 'accessglobalsearchstring', component: 'theme_snap'},\n                    {key: 'viewcalendar', component: 'theme_snap'},\n                    {key: 'viewmyfeedback', component: 'theme_snap'},\n                    {key: 'viewmessaging', component: 'theme_snap'},\n                    {key: 'viewforumposts', component: 'theme_snap'},\n                    {key: 'editcoursesettings', component: 'theme_snap'},\n                    {key: 'gradebook', component: 'local_joulegrader'},\n                    {key: 'gradebook', component: 'core_grades'},\n                    {key: 'numparticipants', component: 'core_message'},\n                    {key: 'pld', component: 'theme_snap'},\n                    {key: 'competencies', component: 'core_competency'},\n                    {key: 'outcomes', component: 'core_outcome'},\n                    {key: 'badges', component: 'core_badges'},\n                    {key: 'coursereport', component: 'report_allylti'},\n                    {key: 'pluginname', component: 'local_catalogue'},\n                    {key: 'experimental', component: 'block_reports'}\n                ]).done(function(stringsjs) {\n                    if ($(\"#page-mod-forum-discuss\")) {\n                        $(\"div[data-content='forum-discussion'] select.custom-select.singleselect\")\n                        .attr(\"aria-label\", stringsjs[0]);\n                        $(\"div[data-content='forum-discussion'] div.movediscussionoption \" +\n                            \"select.custom-select.urlselect\").attr(\"aria-label\", stringsjs[1]);\n                    }\n                    $(\"i.fa-calendar\").parent().attr(\"aria-label\", stringsjs[2]);\n                    $(\"input[name='TimeEventSelector[calendar]']\").attr('aria-label', stringsjs[2]);\n                    var searchbutton = $(\"#mr-nav .simplesearchform a.btn.btn-open\");\n                    $(searchbutton).attr({\n                        title: stringsjs[3],\n                        'aria-label': stringsjs[3],\n                    });\n\n                    // Add needed ID's for course dashboard.\n                    // These ID's were added for the most used elements in the course dashboard.\n\n                    // There is not a lang string that contains {$a} participants with capital P, and this function helps with that.\n                    // Taken from https://css-tricks.com/snippets/jquery/make-jquery-contains-case-insensitive/\n                    $.expr[\":\"].contains = $.expr.createPseudo(function(arg) {\n                        return function(elem) {\n                            return $(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;\n                        };\n                    });\n                    var ctparticipantsnumber = stringsjs[11].split(\" \");\n                    $('section#coursetools ul#coursetools-list a:contains(\"' + stringsjs[8] + '\")')\n                        .attr(\"id\", \"ct-course-settings\");\n                    $('section#coursetools ul#coursetools-list a:contains(\"' + ctparticipantsnumber[1] + '\")')\n                        .attr(\"id\", \"ct-participants-number\");\n                    $('section#coursetools ul#coursetools-list a:contains(\"' + stringsjs[13] + '\")')\n                        .attr(\"id\", \"ct-competencies\");\n                    $('section#coursetools ul#coursetools-list a:contains(\"' + stringsjs[14] + '\")')\n                        .attr(\"id\", \"ct-outcomes\");\n                    $('section#coursetools ul#coursetools-list a:contains(\"' + stringsjs[15] + '\")')\n                        .attr(\"id\", \"ct-badges\");\n\n                    // Check if the plugins are installed to pass the strings. These parameters are being passed from\n                    // $initaxvars in snap/classes/output/shared.php. More validations can be added if needed.\n                    if (localJouleGrader) {\n                        $('section#coursetools ul#coursetools-list a:contains(\"' + 'Open Grader' + '\")')\n                            .attr(\"id\", \"ct-open-grader\");\n                        $('section#coursetools ul#coursetools-list a:contains(\"' + stringsjs[9] + '\")')\n                            .attr(\"id\", \"ct-course-gradebook\");\n                    } else {\n                        $('section#coursetools ul#coursetools-list a:contains(\"' + stringsjs[10] + '\")')\n                            .attr(\"id\", \"ct-course-gradebook\");\n                    }\n                    if (blockReports) {\n                        $('section#coursetools ul#coursetools-list a:contains(\"' + 'Open Reports' + '\")')\n                            .attr(\"id\", \"ct-open-reports\");\n                        $('section#coursetools ul#coursetools-list a:contains(\"' + stringsjs[18] + '\")')\n                            .attr(\"id\", \"ct-open-reports-experimental\");\n                    }\n                    if (allyReport) {\n                        $('section#coursetools ul#coursetools-list a:contains(\"' + stringsjs[16] + '\")')\n                            .attr(\"id\", \"ct-ally\");\n                    }\n                    if (localCatalogue) {\n                        $('section#coursetools ul#coursetools-list a:contains(\"' + stringsjs[17] + '\")')\n                            .attr(\"id\", \"ct-open-catalogue\");\n                    }\n\n                    // Add ARIA attributes.\n                    $('div[role=\"main\"] div.sitetopic ul.section.img-text').attr('role', 'presentation');\n                });\n\n                $(document).ready(function() {\n                    // Add necessary attributes to needed DOM elements to new accessibility features.\n                    $(\"#page-mod-data-edit input[id*='url']\").attr(\"type\", \"url\").attr(\"autocomplete\", \"url\");\n                    $(\"#moodle-blocks aside#block-region-side-pre a.sr-only.sr-only-focusable\").attr(\"tabindex\", \"-1\");\n\n                    // Focus first invalid input after a submit is done.\n                    $('.mform').submit(function() {\n                        $('input.form-control.is-invalid:first').focus();\n                    });\n\n                    // Retrieve value from the input buttons from add/remove users in a group inside a course.\n                    var addtext = $('.groupmanagementtable #buttonscell p.arrow_button input[name=\"add\"]').attr('value');\n                    var removetext = $(\".groupmanagementtable #buttonscell p.arrow_button input[name='remove']\").attr('value');\n\n                    // Snap tab panels.\n                    new Tabpanel(\"snap-pm-accessible-tab\");\n                    new Tabpanel(\"modchooser-accessible-tab\");\n\n                    // Wrapping for dropdown elements in the actionable elements in an activity for PLD.\n                    if( $(\".dropdown-item.editing_pld\").closest(\".pld-dropdown\").length == 0 ) {\n                        $(\".dropdown-item.editing_pld\").wrap(\"<li class='pld-dropdown'></li>\");\n                    }\n                    $(\".dropdown-item.editing_pld\").attr(\"role\",\"button\");\n\n                    /**\n                     * Store the references outside the event handler.\n                     * Window reload to change the inputs value for Add and Remove buttons when adding new\n                     * members to a group.\n                     */\n                    var $window = $(window);\n\n                    /**\n                     * Modifies attributes depending on the window size.\n                     */\n                    function checkWidth() {\n                        var windowsize = $window.width();\n                        if (windowsize < 1220) {\n                            $(\".groupmanagementtable #buttonscell p.arrow_button input[name='add']\").attr(\"value\", \"+\");\n                            $(\".groupmanagementtable #buttonscell p.arrow_button input[name='remove']\").attr(\"value\", \"-\");\n                        } else if (windowsize > 1220) {\n                            $(\".groupmanagementtable #buttonscell p.arrow_button input[name='add']\").attr(\"value\", addtext);\n                            $(\".groupmanagementtable #buttonscell p.arrow_button input[name='remove']\").attr(\"value\", removetext);\n                        }\n                    }\n                    // Execute on load\n                    checkWidth();\n                    // Bind event listener\n                    $(window).resize(checkWidth);\n\n                    /**\n                     * Change for the active carousel slide.\n                     */\n                    function carouselAriaCurrentValue() {\n                        var carouselindicator = $('#snap-site-carousel .carousel-indicators button');\n                        carouselindicator.click(function (e) {\n                            var element = $(e.target);\n                            carouselindicator.attr('aria-current', false);\n                            element.attr('aria-current', true);\n                        });\n\n                        /**\n                         * Listener to change aria-current value dynamically.\n                         */\n                        var targetNode = document.getElementById('snap-carousel-container');\n\n                        // Options for the observer (which mutations to observe)\n                        var config = { attributes: true, childList: true, subtree: true };\n\n                        // Callback function to execute when mutations are observed\n                        var callback = () => {\n                            $('.carousel-indicators button').attr('aria-current', false);\n                            $('.carousel-indicators button.active').attr('aria-current', true);\n                        };\n\n                        // Create an observer instance linked to the callback function\n                        var observer = new MutationObserver(callback);\n\n                        if (targetNode) {\n                            // Start observing the target node for configured mutations.\n                            observer.observe(targetNode, config);\n                        }\n                    }\n                    carouselAriaCurrentValue();\n\n                    /**\n                     * Creates a pause and resume cycles for Snap's carousel.\n                     */\n                    function carouselPausePlay() {\n                        $('#snap-site-carousel').carousel({\n                            interval: 6000,\n                            pause: \"false\"\n                        });\n\n                        $('#play-button').click(function () {\n                            $('#snap-site-carousel').carousel('cycle');\n                        });\n                        $('#pause-button').click(function () {\n                            $('#snap-site-carousel').carousel('pause');\n                        });\n                    }\n                    carouselPausePlay();\n\n                    /**\n                     * Set all the side drawers tabbing order.\n                     */\n                    function setDrawersTabOrder() {\n                        let blocksDrawerFocus;\n                        let blocksDrawerAccessed = false;\n\n                        /**\n                         * Gets both the first and the last focusable elements from a drawer.\n                         *\n                         * @param {object} drawer The drawer to be analyzed.\n                         */\n                        function getFirstAndLastOfDrawer(drawer) {\n                            let focusables = '[tabindex]:not([tabindex=\"-1\"]),' +\n                                ' a[href]:not([tabindex]),' +\n                                ' button:not([disabled]):not([tabindex]),' +\n                                ' input:not([disabled]):not([tabindex]),' +\n                                ' textarea:not([disabled]):not([tabindex]),' +\n                                ' select:not([disabled]):not([tabindex]), details:not([tabindex])';\n\n                            let first = null;\n                            let last = null;\n                            if (drawer) {\n                                let drawerFocusables = Array.from(drawer.querySelectorAll(focusables)).filter(el => {\n                                    return el.checkVisibility();\n                                });\n                                first = drawerFocusables[0];\n                                last = drawerFocusables[drawerFocusables.length - 1];\n                            }\n                            return [first, last];\n                        }\n\n                        /**\n                         * Event listener to determine keyboard navigation of the drawers.\n                         *\n                         * @param {object} ev event\n                         */\n                        function drawerTabListener(ev) {\n\n                            // Setup for the listener.\n                            let adminDrawerIcon = document.getElementById('admin-menu-trigger');\n                            let adminDrawer = adminDrawerIcon ?\n                                document.querySelector('section.block_settings[data-block=\"settings\"]') : null;\n                            let blocksDrawerIcon = document.querySelector('.blocks-drawer-button');\n                            let blocksDrawer = blocksDrawerIcon ?\n                                document.getElementById('theme_snap-drawers-blocks') : null;\n                            let blocksDrawerClose = document.querySelector('#theme_snap-drawers-blocks > .drawerheader > button');\n                            let snapfeedsDrawerIcon = document.getElementById('snap_feeds_side_menu_trigger');\n                            let snapfeedsDrawer = snapfeedsDrawerIcon ?\n                                document.querySelector('#snap_feeds_side_menu .snap-feeds') : null;\n                            let snapfeedsSideMenu = document.getElementById('snap_feeds_side_menu');\n                            let messageDrawerIcon = document.querySelector('a[id^=\\'message-drawer-toggle-\\']');\n                            let messageDrawerChild = document.querySelector('div[data-region=\"message-drawer\"]');\n                            let messageDrawer = messageDrawerChild ? messageDrawerChild.parentElement : null;\n                            messageDrawer = messageDrawerIcon ? messageDrawer : null;\n                            let messageDrawerClose = document.querySelector('[id^=\"message-drawer-\"] > div.closewidget > a');\n                            let drawerIcons = [adminDrawerIcon, blocksDrawerIcon, snapfeedsDrawerIcon, messageDrawerIcon]\n                                .filter(el => {\n                                    return el !== null;\n                                });\n                            let drawers = [adminDrawer, blocksDrawer, snapfeedsDrawer, messageDrawer]\n                                .filter(el => {\n                                    return el !== null;\n                                });\n                            let beforeDrawers = document.querySelector('#snap-custom-menu-header div > ul > li:nth-child(2) > a');\n                            beforeDrawers = beforeDrawers ?\n                                beforeDrawers : document.querySelector('#snap-custom-menu-header > nav > div > ul > li > a');\n                            let afterDrawers = document.querySelector('#snap-sidebar-menu > button.snap-sidebar-menu-trigger');\n\n                            let adminDrawerFirst = null;\n                            let adminDrawerLast = null;\n                            [adminDrawerFirst, adminDrawerLast] = getFirstAndLastOfDrawer(adminDrawer);\n\n                            let blocksDrawerFirst = null;\n                            let blocksDrawerLast = null;\n                            [blocksDrawerFirst, blocksDrawerLast] = getFirstAndLastOfDrawer(blocksDrawer);\n\n                            let snapfeedsDrawerFirst = null;\n                            let snapfeedsDrawerLast = null;\n                            [snapfeedsDrawerFirst, snapfeedsDrawerLast] = getFirstAndLastOfDrawer(snapfeedsDrawer);\n\n                            let messageDrawerFirst = null;\n                            let messageDrawerLast = null;\n                            [messageDrawerFirst, messageDrawerLast] = getFirstAndLastOfDrawer(messageDrawer);\n\n                            let drawerFirsts = [adminDrawerFirst, blocksDrawerFirst, snapfeedsDrawerFirst, messageDrawerFirst]\n                                .filter(el => {\n                                    return el !== null;\n                                });\n                            let drawerLasts = [adminDrawerLast, blocksDrawerLast, snapfeedsDrawerLast, messageDrawerLast]\n                                .filter(el => {\n                                    return el !== null;\n                                });\n\n                            // Process keys (Tab, Shift+Tab, and Enter).\n                            if (ev.key === 'Tab' && drawerIcons.includes(ev.target)) {\n                                ev.preventDefault();\n                                let idx = drawerIcons.indexOf(ev.target);\n                                if ((drawers[idx].classList.contains('state-visible')\n                                        && adminDrawer && drawers[idx] === adminDrawer) ||\n                                    (drawers[idx].classList.contains('show') && blocksDrawer && drawers[idx] === blocksDrawer) ||\n                                    (snapfeedsSideMenu && snapfeedsSideMenu.classList.contains('state-visible')\n                                        && snapfeedsDrawer && drawers[idx] === snapfeedsDrawer) ||\n                                    (!drawers[idx].classList.contains('hidden')\n                                        && messageDrawer && drawers[idx] === messageDrawer)) {\n                                    if (ev.shiftKey) {\n                                        drawerLasts[idx].focus();\n                                    } else {\n                                        drawerFirsts[idx].focus();\n                                    }\n                                } else {\n                                    if (ev.shiftKey) {\n                                        if (idx === 0) {\n                                            beforeDrawers.focus();\n                                        } else {\n                                            drawerIcons[idx - 1].focus();\n                                        }\n                                    } else {\n                                        if (idx < drawers.length - 1) {\n                                            drawerIcons[idx + 1].focus();\n                                        } else {\n                                            afterDrawers.focus();\n                                        }\n                                    }\n                                }\n                            } else if (ev.key === 'Tab' && !ev.shiftKey && drawerLasts.includes(ev.target)) {\n                                ev.preventDefault();\n                                let idx = drawerLasts.indexOf(ev.target);\n                                drawerIcons[idx].focus();\n                            } else if (ev.key === 'Tab' && ev.shiftKey && drawerFirsts.includes(ev.target)) {\n                                ev.preventDefault();\n                                let idx = drawerFirsts.indexOf(ev.target);\n                                drawerIcons[idx].focus();\n                            } else if (ev.key === 'Enter' && (drawerIcons.includes(ev.target)\n                                || messageDrawerClose === ev.target)) {\n                                blocksDrawerAccessed = false;\n                                ev.preventDefault();\n                                let idx = drawerIcons.indexOf(ev.target);\n                                if (drawerIcons[idx] === messageDrawerIcon) {\n                                    document.getElementById('page').classList.toggle('offcanvas');\n                                } else if (drawerIcons[idx] === blocksDrawerIcon) {\n                                    drawerIcons[idx].click();\n                                    blocksDrawerFocus = function() {\n                                        if (blocksDrawerAccessed) {\n                                            return;\n                                        } else {\n                                            blocksDrawerAccessed = true;\n                                        }\n                                        blocksDrawerIcon.focus();\n                                        blocksDrawerClose.removeEventListener('focus', blocksDrawerFocus);\n                                    };\n                                    blocksDrawerClose.addEventListener('focus', blocksDrawerFocus);\n                                } else if (messageDrawerClose !== ev.target) {\n                                    drawerIcons[idx].click();\n                                } else {\n                                    document.getElementById('page').classList.toggle('offcanvas');\n                                    messageDrawerIcon.focus();\n                                }\n                                if (idx >= 0) {\n                                    drawerIcons[idx].focus();\n                                }\n                            }\n                        }\n                        document.addEventListener('keydown', drawerTabListener);\n                    }\n                    setDrawersTabOrder();\n                });\n\n                /**\n                 * Add needed accessibility for tabs inside Snap.\n                 * This makes use of Bootstrap accessible tab panel with WAI-ARIA with the arrow keys binding codes.\n                 * @param {string} id\n                 */\n                function Tabpanel(id) {\n                    this._id = id;\n                    this.$tpanel = $('#' + id);\n                    this.$tabs = this.$tpanel.find('.tab');\n                    this.$panels = this.$tpanel.find('.tab-pane');\n                    this.bindHandlers();\n                    this.init();\n                }\n\n                Tabpanel.prototype.keys = {\n                    left: 37,\n                    up: 38,\n                    right: 39,\n                    down: 40\n                };\n\n                Tabpanel.prototype.init = function() {\n                    var $tab;\n                    this.$panels.attr('aria-hidden', 'true');\n                    this.$panels.removeClass('active in');\n                    $tab = this.$tabs.filter('.active');\n                    if ($tab === undefined) {\n                        $tab = this.$tabs.first();\n                        $tab.addClass('active');\n                    }\n                    this.$tpanel\n                        .find('#' + $tab.find('a').attr('aria-controls'))\n                        .addClass('active in').attr('aria-hidden', 'false');\n                };\n\n                Tabpanel.prototype.switchTabs = function($curTab, $newTab) {\n                    var $curTabLink = $curTab.find('a'),\n                        $newTabLink = $newTab.find('a');\n                    $curTab.removeClass('active');\n                    $curTabLink.attr('tabindex', '-1').attr('aria-selected', 'false');\n                    $newTab.addClass('active');\n                    $newTabLink.attr('aria-selected', 'true');\n                    this.$tpanel\n                        .find('#' + $curTabLink.attr('aria-controls'))\n                        .removeClass('active in').attr('aria-hidden', 'true');\n                    this.$tpanel\n                        .find('#' + $newTabLink.attr('aria-controls'))\n                        .addClass('active in').attr('aria-hidden', 'false');\n                    $newTabLink.attr('tabindex', '0');\n                    $newTabLink.focus();\n                };\n\n                Tabpanel.prototype.bindHandlers = function() {\n                    var self = this;\n                    this.$tabs.keydown(function(e) {\n                        return self.handleTabKeyDown($(this), e);\n                    });\n                    this.$tabs.click(function(e) {\n                        return self.handleTabClick($(this), e);\n                    });\n                };\n\n                Tabpanel.prototype.handleTabKeyDown = function($tab, e) {\n                    var $newTab, tabIndex;\n                    switch (e.keyCode) {\n                        case this.keys.left:\n                        case this.keys.up: {\n                            tabIndex = this.$tabs.index($tab);\n                            if (tabIndex === 0) {\n                                $newTab = this.$tabs.last();\n                            } else {\n                                $newTab = this.$tabs.eq(tabIndex - 1);\n                            }\n                            this.switchTabs($tab, $newTab);\n                            e.preventDefault();\n                            return false;\n                        }\n                        case this.keys.right:\n                        case this.keys.down: {\n                            tabIndex = this.$tabs.index($tab);\n                            if (tabIndex === this.$tabs.length - 1) {\n                                $newTab = this.$tabs.first();\n                            } else {\n                                $newTab = this.$tabs.eq(tabIndex + 1);\n                            }\n                            this.switchTabs($tab, $newTab);\n                            e.preventDefault();\n                            return false;\n                        }\n                    }\n                };\n\n                Tabpanel.prototype.handleTabClick = function($tab) {\n                    var $oldTab = this.$tpanel.find('.tab.active');\n                    this.switchTabs($oldTab, $tab);\n                };\n            },\n\n            /**\n             * Custom form error event handler to manipulate the bootstrap markup and show\n             * nicely styled errors in an mform focusing the necessary elements in the form.\n             * @param {string} elementid\n             */\n            enhanceform: function(elementid) {\n                const element = document.getElementById(elementid);\n                if (!element) {\n                    return;\n                }\n\n                element.addEventListener(FormEvents.eventTypes.formFieldValidationFailed, function(event) {\n                    event.preventDefault();\n                    const msg = event.detail?.message || '';\n\n                    const parent = element.closest('.form-group');\n                    if (!parent) {\n                        return;\n                    }\n                    const feedback = parent.querySelector('.form-control-feedback');\n                    const invalidInput = parent.querySelector('input.form-control.is-invalid');\n\n                    let activeElement = element;\n\n                    // Sometimes (atto) we have a hidden textarea backed by a real contenteditable div.\n                    if (element.tagName === 'TEXTAREA') {\n                        const contentEditable = parent.querySelector('[contenteditable]');\n                        if (contentEditable) {\n                            activeElement = contentEditable;\n                        }\n                    }\n\n                    if (msg !== '') {\n                        parent.classList.add('has-danger');\n                        parent.dataset.clientValidationError = \"true\";\n                        activeElement.classList.add('is-invalid');\n\n                        if (feedback) {\n                            activeElement.setAttribute('aria-describedby', feedback.id);\n                            activeElement.setAttribute('aria-invalid', 'true');\n                            if (invalidInput) {\n                                invalidInput.setAttribute('tabindex', '0');\n                            }\n                            feedback.innerHTML = msg;\n\n                            // Only focus if there is no other element with focus error already.\n                            if (!document.querySelector('[data-error-focused=\"true\"]')) {\n                                activeElement.setAttribute('data-error-focused', 'true');\n                                setTimeout(function() {\n                                    activeElement.focus();\n                                    activeElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n                                }, 0);\n                            }\n                        }\n                    } else {\n                        if (parent.dataset.clientValidationError === \"true\") {\n                            parent.classList.remove('has-danger');\n                            delete parent.dataset.clientValidationError;\n                            activeElement.classList.remove('is-invalid');\n                            activeElement.removeAttribute('aria-describedby');\n                            activeElement.setAttribute('aria-invalid', 'false');\n\n                            if (feedback) {\n                                feedback.style.display = 'none';\n                            }\n                        }\n                    }\n                });\n            },\n\n            /**\n             * Override the options from theme_boost/loader::enablePopovers to enhance accesibility (VPAT).\n             */\n            setManualPopovers: function() {\n                const btnSelector = '.iconhelp.btn';\n\n                $('body').popover({\n                    selector: '[data-toggle=\"popover\"]',\n                    trigger: 'manual',\n                    container: 'body',\n                    whitelist: Object.assign(DefaultWhitelist, {\n                        table: [],\n                        thead: [],\n                        tbody: [],\n                        tr: [],\n                        th: [],\n                        td: [],\n                    }),\n                });\n\n                // Prevent Bootstrap from automatically reacting to button focus\n                $(btnSelector).on('focusin', function(e) {\n                    e.stopImmediatePropagation();\n                });\n\n                $(btnSelector).on('click', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n\n                    const $el = $(this);\n                    const isOpen = $el.attr('aria-expanded') === 'true';\n\n                    if (isOpen) {\n                        $el.popover('hide');\n                    } else {\n                        $el.popover('show');\n                    }\n                });\n\n                $(btnSelector).on('keydown', function(e) {\n                    const $el = $(this);\n\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n\n                        const isOpen = $el.attr('aria-expanded') === 'true';\n\n                        if (isOpen) {\n                            $el.popover('hide');\n                        } else {\n                            $el.popover('show');\n                        }\n                    }\n\n                    if (e.key === 'Escape') {\n                        $el.popover('hide');\n                    }\n                });\n\n                $(btnSelector).on('shown.bs.popover', function () {\n                    const popover = $(this).data('bs.popover').tip;\n                    $(this).attr('aria-controls', popover.id);\n                    $(this).attr('aria-expanded', true);\n                    $(popover).insertAfter($(this));\n                    $(popover).popover('update');\n                });\n\n                $(btnSelector).on('hidden.bs.popover', function () {\n                    $(this).attr('aria-expanded', false);\n                });\n            }\n\n        };\n    }\n);\n"],"names":["define","$","str","Event","FormEvents","DefaultWhitelist","snapAxInit","localJouleGrader","allyReport","blockReports","localCatalogue","Tabpanel","id","_id","$tpanel","$tabs","this","find","$panels","bindHandlers","init","get_strings","key","component","done","stringsjs","attr","parent","searchbutton","title","expr","contains","createPseudo","arg","elem","text","toUpperCase","indexOf","ctparticipantsnumber","split","document","ready","submit","focus","addtext","removetext","closest","length","wrap","$window","window","checkWidth","windowsize","width","resize","carouselindicator","click","e","element","target","targetNode","getElementById","observer","MutationObserver","observe","attributes","childList","subtree","carouselAriaCurrentValue","carousel","interval","pause","blocksDrawerFocus","blocksDrawerAccessed","getFirstAndLastOfDrawer","drawer","first","last","drawerFocusables","Array","from","querySelectorAll","filter","el","checkVisibility","addEventListener","ev","adminDrawerIcon","adminDrawer","querySelector","blocksDrawerIcon","blocksDrawer","blocksDrawerClose","snapfeedsDrawerIcon","snapfeedsDrawer","snapfeedsSideMenu","messageDrawerIcon","messageDrawerChild","messageDrawer","parentElement","messageDrawerClose","drawerIcons","drawers","beforeDrawers","afterDrawers","adminDrawerFirst","adminDrawerLast","blocksDrawerFirst","blocksDrawerLast","snapfeedsDrawerFirst","snapfeedsDrawerLast","messageDrawerFirst","messageDrawerLast","drawerFirsts","drawerLasts","includes","preventDefault","idx","classList","shiftKey","toggle","removeEventListener","setDrawersTabOrder","prototype","keys","left","up","right","down","$tab","removeClass","undefined","addClass","switchTabs","$curTab","$newTab","$curTabLink","$newTabLink","self","keydown","handleTabKeyDown","handleTabClick","tabIndex","keyCode","index","eq","$oldTab","enhanceform","elementid","eventTypes","formFieldValidationFailed","event","msg","detail","message","feedback","invalidInput","activeElement","tagName","contentEditable","add","dataset","clientValidationError","setAttribute","innerHTML","setTimeout","scrollIntoView","behavior","block","remove","removeAttribute","style","display","setManualPopovers","popover","selector","trigger","container","whitelist","Object","assign","table","thead","tbody","tr","th","td","on","stopImmediatePropagation","$el","data","tip","insertAfter"],"mappings":"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"}